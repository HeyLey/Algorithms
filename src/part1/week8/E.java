package part1.week8;

/*
–í —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–æ–º –∫–ª—É–±–µ –ª—é–±–∏—Ç–µ–ª–µ–π –∫–æ—à–µ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ ùëõ —á–ª–µ–Ω–æ–≤.
–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, —á—Ç–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ —á–ª–µ–Ω–æ–≤ –∫–ª—É–±–∞ –∑–Ω–∞–∫–æ–º—ã –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º.
–ù—É–∂–Ω–æ —Å–æ—Å—á–∏—Ç–∞—Ç—å, —Å–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∏–∑ –Ω–∏—Ö —Ç—Ä–æ–∏—Ö,
–∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –±—ã —Å–≤–æ–±–æ–¥–Ω–æ –æ–±—â–∞—Ç—å—Å—è (—Ç–æ –µ—Å—Ç—å, –ª—é–±—ã–µ –¥–≤–∞ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –∑–Ω–∞–∫–æ–º—ã –º–µ–∂–¥—É —Å–æ–±–æ–π).

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∑–∞–¥–∞–Ω—ã —á–∏—Å–ª–∞ n –∏ m (1 <= n <= 1000, 1 <= m <= 30000),
–≥–¥–µ m –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –æ–±—â–µ–µ —á–∏—Å–ª–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤.
–í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö m —Å—Ç—Ä–æ–∫–∞—Ö –∏–¥—É—Ç –ø–∞—Ä—ã —á–∏—Å–µ–ª a_i b_i,
–æ–±–æ–∑–Ω–∞—á–∞—é—â–∏–µ, —á—Ç–æ a_i –∑–Ω–∞–∫–æ–º —Å b_i.
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–¥–Ω–æ–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑,
–ø—Ä–∏—á–µ–º –¥–∞–∂–µ –≤ —Ä–∞–∑–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∫–∞–∫ (x, y) —Ç–∞–∫ –∏ (y, x)).
–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–í –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–±—Ä–∞—Ç—å —Ç—Ä–æ–∏—Ö
–ø–æ–ø–∞—Ä–Ω–æ –∑–Ω–∞–∫–æ–º—ã—Ö –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º –ª—é–¥–µ–π –∏–∑ –∫–ª—É–±–∞.
 */
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;

public class E {
    static StreamTokenizer in;

    static int nextInt() throws IOException {
        in.nextToken();
        return (int) in.nval;
    }

    static String next() throws IOException {
        in.nextToken();
        return in.sval;
    }

    public static void main(String[] args) throws IOException {
        in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        int n = nextInt();
        int m = nextInt();

        boolean a[][] = new boolean[n][n];

        for (int i = 0; i < m; i++) {
            int v = nextInt() - 1;
            int u = nextInt() - 1;
            a[v][u] = true;
            a[u][v] = true;
        }

        int count = 0;

        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (!a[i][j]) {
                    continue;
                }
                for (int k = j + 1; k < n; k++) {
                    if (!a[i][k]) {
                        continue;
                    }
                    if (!a[j][k]) {
                        continue;
                    }
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}